imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: false
  name:

storageClass: rook-ceph-block

ingress:
  enabled: true

  host: villas.k8s.eonerc.rwth-aachen.de

  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    eonerc.rwth-aachen.de/description: VILLASweb
    eonerc.rwth-aachen.de/link: https://git.rwth-aachen.de/acs/public/villas/web

  tls:
    enabled: true
    secretName: letsencrypt-prod-villas-demo

web:
  enabled: true

  metrics:
    enabled: true

  mode: release

  extraConfig: {}

  admin:
    username: admin
    mail: admin@example.com

  backend:
    # image: registry.git.rwth-aachen.de/acs/public/villas/web-backend-go:33eab641
    image: villas/web-backend-go:admin-init

  frontend:
    image: registry.git.rwth-aachen.de/acs/public/villas/web:723af74e
    replicas: 2

node:
  enabled: true

  image: registry.git.rwth-aachen.de/acs/public/villas/node:latest

  uuid: null # Autogenerate UUID
  logLevel: info

  portOffset: 12000
  portCount: 10

  persistence:
    enabled: true
    size: 1Gi

  extraConfig:
    hugepages: 0

    http:
      htdocs: /usr/share/villas/node/web
      port: 8080

    logging:
      level: info

    nodes:
      sig:
        type: signal
        signal: mixed
        values: 5
        rate: 20
      lo:
        type: loopback
      ws_sig:
        type: websocket
      ws_lo:
        type: websocket

    paths:
    - in: sig
      out: ws_sig
    - in: ws_lo
      out: lo
    - in: lo
      out: ws_lo

  extraNodes: {}
  extraPaths: []

relay:
  enabled: true

  uuid: null # Autogenerate UUID
  logLevel: info
  loopback: false

  image: registry.git.rwth-aachen.de/acs/public/villas/node:latest

controller:
  enabled: true

  rbac:
    enabled: true

  uuid: null # Autogenerate UUID
  namespace: null # Use "{{ .Release.Namespace }}-controller"
  logLevel: info
  name: Kubernetes Controller

  image: registry.git.rwth-aachen.de/acs/public/villas/controller:latest

  extraComponents: []

  extraConfig:
    components: []

database:
  # Set to false for using an external broker
  # If so, provide the connection details in broker.external
  enabled: true

  # external:
  #   hostname: postgresql.postgresql
  #   name: villas
  #   username: villas
  #   password: XXXX

  postgresqlUsername: villas
  postgresqlDatabase: villas
  postgresqlPassword: XXXX

broker:
  # Set to false for using an external broker
  # If so, provide the connection details in broker.external
  enabled: true

  # external:
  #   hostname: broker.villas-demo
  #   username: admin
  #   password: XXXX

  extraPlugins: rabbitmq_mqtt

  service:
    extraPorts:
    - name: mqtt
      port: 1883
      targetPort: mqtt

  auth:
    username: villas
    password: uzH48bBskn
    erlangCookie: Uy2RmPBj66F7fTZ8Bx66eKb1xOOoZTyv
