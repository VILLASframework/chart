{{- if .Values.ingress.enabled -}}
{{- if semverCompare ">=1.21" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1
{{- else if semverCompare ">=1.14-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1beta1
{{- else -}}
apiVersion: extensions/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: "{{ include "villas.fullname" . }}"
  labels:
    {{- include "villas.labels" . | nindent 4 }}
  annotations:
    nginx.ingress.kubernetes.io/proxy-buffering: "off"
    nginx.ingress.kubernetes.io/proxy-request-buffering: "off"
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: 1024m
{{- if .Values.ingress.annotations }}
    {{- .Values.ingress.annotations | toYaml | nindent 4 }}
{{- end }}
spec:
{{- if .Values.ingress.tls.enabled }}
  tls:
  - hosts:
    - "{{ .Values.ingress.host }}"
{{- if .Values.s3.enabled }}
    - "s3.{{ .Values.ingress.host }}"
{{- end }}
    secretName: {{ .Values.ingress.tls.secretName }}
{{- end }}
  rules:
  - host: {{ .Values.ingress.host | quote }}
    http:
      paths:
{{- if .Values.web.enabled }}
      - path: /.*
        pathType: ImplementationSpecific
        backend: {{ include "ingress.backend" (dict "top" . "name" "web-frontend" "port" "http") | indent 10 }}
      - path: /(static/.*)
        pathType: ImplementationSpecific
        backend: {{ include "ingress.backend" (dict "top" . "name" "web-frontend" "port" "http") | indent 10 }}
      - path: /(api/.*)
        pathType: ImplementationSpecific
        backend: {{ include "ingress.backend" (dict "top" . "name" "web-backend" "port" "http") | indent 10 }}
{{- if .Values.web.auth.external.enabled }}
      - path: /(oauth2/.*)
        pathType: ImplementationSpecific
        backend: {{ include "ingress.backend" (dict "top" . "name" "proxy" "port" "http") | indent 10 }}
      - path: /(api/v[0-9]+/authenticate/external)
        pathType: ImplementationSpecific
        backend: {{ include "ingress.backend" (dict "top" . "name" "proxy" "port" "http") | indent 10 }}
{{- end }}
{{- end }}
{{- if .Values.broker.enabled }}
      - path: /(broker/.*)
        pathType: ImplementationSpecific
        backend: {{ include "ingress.backend" (dict "top" . "name" "broker" "port" "http-stats") | indent 10 }}
{{- end }}
{{- if .Values.relay.enabled }}
      - path: /ws/relay/(.*)
        pathType: ImplementationSpecific
        backend: {{ include "ingress.backend" (dict "top" . "name" "relay" "port" "http") | indent 10 }}
      - path: /relay/(.*)
        pathType: ImplementationSpecific
        backend: {{ include "ingress.backend" (dict "top" . "name" "relay" "port" "http") | indent 10 }}
{{- end }}
{{- if .Values.controller.enabled }}
      - path: /controller/(.*)
        pathType: ImplementationSpecific
        backend: {{ include "ingress.backend" (dict "top" . "name" "controller" "port" "http") | indent 10 }}
{{- end }}
{{- if .Values.node.enabled }}
      - path: /ws/(.*)
        pathType: ImplementationSpecific
        backend: {{ include "ingress.backend" (dict "top" . "name" "node" "port" "http") | indent 10 }}
      - path: /node/(.*)
        pathType: ImplementationSpecific
        backend: {{ include "ingress.backend" (dict "top" . "name" "node" "port" "http") | indent 10 }}
{{- end }}
{{- if .Values.pintura.enabled }}
      - path: /pintura/(.*)
        pathType: ImplementationSpecific
        backend: {{ include "ingress.backend" (dict "top" . "name" "pintura" "port" "http") | indent 10 }}
{{- end }}
{{- if .Values.s3.enabled }}
  - host: "s3.{{ .Values.ingress.host }}"
    http:
      paths:
      - path: /(.*)
        pathType: ImplementationSpecific
        backend: {{ include "ingress.backend" (dict "top" . "name" "s3" "port" "http") | indent 10 }}
{{- end }}
{{- else }}
{{ "The VILLASframework currently can not function without an ingress controller" | fail }}
{{- end }}
